<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Makro&#39;s Site</title>
        <link>https://makrozhang.github.io/</link>
        <description>This is my cool site</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 13 Mar 2024 17:33:33 &#43;0800</lastBuildDate>
            <atom:link href="https://makrozhang.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Docker</title>
    <link>https://makrozhang.github.io/posts/docker/</link>
    <pubDate>Wed, 13 Mar 2024 17:33:33 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://makrozhang.github.io/posts/docker/</guid>
    <description><![CDATA[为了统一开发环境，需要生成一个安装好各种开发工具的容器，并能够借助主机的JLink调试芯片
Windows安装Docker Desktop 确保Windows版本不小于19044 开启WSL功能 勾选适用于Linux的Windows子系统
运行container 拉取Ubuntu镜像 docker pull ubuntu:latest 可以通过 docker images 查看本地的镜像
创建容器 docker run -it --name my_container ubuntu /bin/bash 在Windows的git-bash中需要将/bin/bash替换为bash 可以通过 docker stop my_container 和 docker start my_container 停止或启动容器
容器内安装开发工具 更换容器内的源
mv /etc/apt/sources.list /etc/apt/sources.list.bak echo &#34;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse&#34; &gt;&gt; /etc/apt/sources.list echo &#34;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse&#34; &gt;&gt; /etc/apt/sources.list echo &#34;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse&#34; &gt;&gt; /etc/apt/sources.list echo &#34;deb http://security.]]></description>
</item>
<item>
    <title>Hugo &#43; GitHub 搭建</title>
    <link>https://makrozhang.github.io/posts/hugo_github/</link>
    <pubDate>Wed, 13 Dec 2023 15:14:14 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://makrozhang.github.io/posts/hugo_github/</guid>
    <description><![CDATA[Hugo 安装 下载地址 Hugo
由于后面要用到 LoveIt 主题，需要下载extended版本
添加环境变量不再赘述
GitHub 新建仓库 为了域名简洁，新建一个仓库名为 $(USRID).github.io 的仓库
本地初始化文件夹 hugo new site makrozhang.github.io 将会新建一个名为 makrozhang.github.io 的文件夹
只是为了和仓库名一致，起始可以任意取名
新建post 相当于新建一篇文章
hugo new posts/first-post.md 会新建 content/posts/first-post.md
删掉开头的 draft: true 或直接删除该行 编辑内容&hellip; 初始化仓库 回到项目的根目录 执行:
git init 下载主题 git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt 修改主题配置 在 hugo.toml 文件中添加一行
theme = &quot;LoveIt&quot; 本地预览 hugo server 浏览器打开 本地端口1313 预览
生成网页文件 文章编辑结束，预览觉得没问题，就可以生成网页了 在 hugo.toml 文件中添加一行
publishDir = &quot;docs&quot; 直接
hugo 管理GitHub仓库 git remote add origin https://github.]]></description>
</item>
<item>
    <title>Erste</title>
    <link>https://makrozhang.github.io/posts/erste/</link>
    <pubDate>Wed, 13 Dec 2023 13:55:43 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://makrozhang.github.io/posts/erste/</guid>
    <description><![CDATA[搭建Github 申请Github账号 在自己的电脑上生成SSH密钥 参考
git config --global user.name &#34;Makro Zhang&#34; git config --global user.email &#34;makrozhang@outlook.com&#34; ssh-keygen -t rsa -C &#34;makrozhang@outlook.com&#34; 会在电脑用户目录下生成 .ssh 文件夹(注意是隐藏文件夹，须打开显示隐藏文件夹)
该文件夹下有两个文件，带后缀 .pub 的是公钥，复制内容放到对应仓库的Github账户里，顺带取个名字（指明是哪台电脑）
clone到本地 git clone git@github.com:MakroZhang/makrozhang.github.io.git 注意使用SSH链接，若使用HTTPS链接后续还要账号密码
本地修改内容 本地提交 git commit -a -m &#39;此处为任意备注&#39; 提交到Github
git push ]]></description>
</item>
</channel>
</rss>
